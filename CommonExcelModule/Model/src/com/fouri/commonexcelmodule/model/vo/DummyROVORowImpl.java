package com.fouri.commonexcelmodule.model.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 17 11:38:20 IST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DummyROVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Sysdate1,
        ifaceId,
        stagingTable,
        validationProc,
        processProc,
        parentIfaceId,
        action,
        ifaceName,
        childIfaceId,
        childIfaceName,
        uploadedBatchId,
        validatedBatchId,
        allBatchId,
        ExportInterfaceId,
        ExportInterface,
        ExportInterfaceExcel,
        ExportParentInterfaceId,
        ExportStagingTable,
        validateProcessIfaceId,
        dataExtractionProc,
        dataExtrationRecType,
        dataExtrationTableType,
        InterfaceROVO1,
        ActionsROVO1,
        InterfaceROVOChild,
        xxdmInterfaceVOUploaded,
        xxdmInterfaceVOValidated,
        xxdmInterfaceVOAll,
        ExportInterfaceROVO1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SYSDATE1 = AttributesEnum.Sysdate1.index();
    public static final int IFACEID = AttributesEnum.ifaceId.index();
    public static final int STAGINGTABLE = AttributesEnum.stagingTable.index();
    public static final int VALIDATIONPROC = AttributesEnum.validationProc.index();
    public static final int PROCESSPROC = AttributesEnum.processProc.index();
    public static final int PARENTIFACEID = AttributesEnum.parentIfaceId.index();
    public static final int ACTION = AttributesEnum.action.index();
    public static final int IFACENAME = AttributesEnum.ifaceName.index();
    public static final int CHILDIFACEID = AttributesEnum.childIfaceId.index();
    public static final int CHILDIFACENAME = AttributesEnum.childIfaceName.index();
    public static final int UPLOADEDBATCHID = AttributesEnum.uploadedBatchId.index();
    public static final int VALIDATEDBATCHID = AttributesEnum.validatedBatchId.index();
    public static final int ALLBATCHID = AttributesEnum.allBatchId.index();
    public static final int EXPORTINTERFACEID = AttributesEnum.ExportInterfaceId.index();
    public static final int EXPORTINTERFACE = AttributesEnum.ExportInterface.index();
    public static final int EXPORTINTERFACEEXCEL = AttributesEnum.ExportInterfaceExcel.index();
    public static final int EXPORTPARENTINTERFACEID = AttributesEnum.ExportParentInterfaceId.index();
    public static final int EXPORTSTAGINGTABLE = AttributesEnum.ExportStagingTable.index();
    public static final int VALIDATEPROCESSIFACEID = AttributesEnum.validateProcessIfaceId.index();
    public static final int DATAEXTRACTIONPROC = AttributesEnum.dataExtractionProc.index();
    public static final int DATAEXTRATIONRECTYPE = AttributesEnum.dataExtrationRecType.index();
    public static final int DATAEXTRATIONTABLETYPE = AttributesEnum.dataExtrationTableType.index();
    public static final int INTERFACEROVO1 = AttributesEnum.InterfaceROVO1.index();
    public static final int ACTIONSROVO1 = AttributesEnum.ActionsROVO1.index();
    public static final int INTERFACEROVOCHILD = AttributesEnum.InterfaceROVOChild.index();
    public static final int XXDMINTERFACEVOUPLOADED = AttributesEnum.xxdmInterfaceVOUploaded.index();
    public static final int XXDMINTERFACEVOVALIDATED = AttributesEnum.xxdmInterfaceVOValidated.index();
    public static final int XXDMINTERFACEVOALL = AttributesEnum.xxdmInterfaceVOAll.index();
    public static final int EXPORTINTERFACEROVO1 = AttributesEnum.ExportInterfaceROVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DummyROVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Sysdate1.
     * @return the Sysdate1
     */
    public Timestamp getSysdate1() {
        return (Timestamp) getAttributeInternal(SYSDATE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Sysdate1.
     * @param value value to set the  Sysdate1
     */
    public void setSysdate1(Timestamp value) {
        setAttributeInternal(SYSDATE1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ifaceId.
     * @return the ifaceId
     */
    public BigDecimal getifaceId() {
        return (BigDecimal) getAttributeInternal(IFACEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ifaceId.
     * @param value value to set the  ifaceId
     */
    public void setifaceId(BigDecimal value) {
        setAttributeInternal(IFACEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute stagingTable.
     * @return the stagingTable
     */
    public String getstagingTable() {
        return (String) getAttributeInternal(STAGINGTABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute stagingTable.
     * @param value value to set the  stagingTable
     */
    public void setstagingTable(String value) {
        setAttributeInternal(STAGINGTABLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute validationProc.
     * @return the validationProc
     */
    public String getvalidationProc() {
        return (String) getAttributeInternal(VALIDATIONPROC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute validationProc.
     * @param value value to set the  validationProc
     */
    public void setvalidationProc(String value) {
        setAttributeInternal(VALIDATIONPROC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute processProc.
     * @return the processProc
     */
    public String getprocessProc() {
        return (String) getAttributeInternal(PROCESSPROC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute processProc.
     * @param value value to set the  processProc
     */
    public void setprocessProc(String value) {
        setAttributeInternal(PROCESSPROC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute parentIfaceId.
     * @return the parentIfaceId
     */
    public BigDecimal getparentIfaceId() {
        return (BigDecimal) getAttributeInternal(PARENTIFACEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute parentIfaceId.
     * @param value value to set the  parentIfaceId
     */
    public void setparentIfaceId(BigDecimal value) {
        setAttributeInternal(PARENTIFACEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute action.
     * @return the action
     */
    public String getaction() {
        return (String) getAttributeInternal(ACTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute action.
     * @param value value to set the  action
     */
    public void setaction(String value) {
        setAttributeInternal(ACTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ifaceName.
     * @return the ifaceName
     */
    public String getifaceName() {
        return (String) getAttributeInternal(IFACENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ifaceName.
     * @param value value to set the  ifaceName
     */
    public void setifaceName(String value) {
        setAttributeInternal(IFACENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute childIfaceId.
     * @return the childIfaceId
     */
    public BigDecimal getchildIfaceId() {
        return (BigDecimal) getAttributeInternal(CHILDIFACEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute childIfaceId.
     * @param value value to set the  childIfaceId
     */
    public void setchildIfaceId(BigDecimal value) {
        setAttributeInternal(CHILDIFACEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute childIfaceName.
     * @return the childIfaceName
     */
    public String getchildIfaceName() {
        return (String) getAttributeInternal(CHILDIFACENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute childIfaceName.
     * @param value value to set the  childIfaceName
     */
    public void setchildIfaceName(String value) {
        setAttributeInternal(CHILDIFACENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute uploadedBatchId.
     * @return the uploadedBatchId
     */
    public BigDecimal getuploadedBatchId() {
        return (BigDecimal) getAttributeInternal(UPLOADEDBATCHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute uploadedBatchId.
     * @param value value to set the  uploadedBatchId
     */
    public void setuploadedBatchId(BigDecimal value) {
        setAttributeInternal(UPLOADEDBATCHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute validatedBatchId.
     * @return the validatedBatchId
     */
    public BigDecimal getvalidatedBatchId() {
        return (BigDecimal) getAttributeInternal(VALIDATEDBATCHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute validatedBatchId.
     * @param value value to set the  validatedBatchId
     */
    public void setvalidatedBatchId(BigDecimal value) {
        setAttributeInternal(VALIDATEDBATCHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute allBatchId.
     * @return the allBatchId
     */
    public BigDecimal getallBatchId() {
        return (BigDecimal) getAttributeInternal(ALLBATCHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute allBatchId.
     * @param value value to set the  allBatchId
     */
    public void setallBatchId(BigDecimal value) {
        setAttributeInternal(ALLBATCHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExportInterfaceId.
     * @return the ExportInterfaceId
     */
    public String getExportInterfaceId() {
        return (String) getAttributeInternal(EXPORTINTERFACEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExportInterfaceId.
     * @param value value to set the  ExportInterfaceId
     */
    public void setExportInterfaceId(String value) {
        setAttributeInternal(EXPORTINTERFACEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExportInterface.
     * @return the ExportInterface
     */
    public BigDecimal getExportInterface() {
        if(null == getAttributeInternal(EXPORTINTERFACE)){
                    if(getExportInterfaceROVO1().first()!=null) {
                        return (BigDecimal)getExportInterfaceROVO1().first().getAttribute("IfaceId");
                    }
                    else{
                        return (BigDecimal) getAttributeInternal(EXPORTINTERFACE);
                    }
                }
                else{
                     return (BigDecimal) getAttributeInternal(EXPORTINTERFACE);
                }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExportInterface.
     * @param value value to set the  ExportInterface
     */
    public void setExportInterface(BigDecimal value) {
        setAttributeInternal(EXPORTINTERFACE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExportInterfaceExcel.
     * @return the ExportInterfaceExcel
     */
    public String getExportInterfaceExcel() {
        return (String) getAttributeInternal(EXPORTINTERFACEEXCEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExportInterfaceExcel.
     * @param value value to set the  ExportInterfaceExcel
     */
    public void setExportInterfaceExcel(String value) {
        setAttributeInternal(EXPORTINTERFACEEXCEL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExportParentInterfaceId.
     * @return the ExportParentInterfaceId
     */
    public BigDecimal getExportParentInterfaceId() {
        return (BigDecimal) getAttributeInternal(EXPORTPARENTINTERFACEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExportParentInterfaceId.
     * @param value value to set the  ExportParentInterfaceId
     */
    public void setExportParentInterfaceId(BigDecimal value) {
        setAttributeInternal(EXPORTPARENTINTERFACEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExportStagingTable.
     * @return the ExportStagingTable
     */
    public String getExportStagingTable() {
        return (String) getAttributeInternal(EXPORTSTAGINGTABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExportStagingTable.
     * @param value value to set the  ExportStagingTable
     */
    public void setExportStagingTable(String value) {
        setAttributeInternal(EXPORTSTAGINGTABLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute validateProcessIfaceId.
     * @return the validateProcessIfaceId
     */
    public BigDecimal getvalidateProcessIfaceId() {
        return (BigDecimal) getAttributeInternal(VALIDATEPROCESSIFACEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute validateProcessIfaceId.
     * @param value value to set the  validateProcessIfaceId
     */
    public void setvalidateProcessIfaceId(BigDecimal value) {
        setAttributeInternal(VALIDATEPROCESSIFACEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute dataExtractionProc.
     * @return the dataExtractionProc
     */
    public String getdataExtractionProc() {
        return (String) getAttributeInternal(DATAEXTRACTIONPROC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute dataExtractionProc.
     * @param value value to set the  dataExtractionProc
     */
    public void setdataExtractionProc(String value) {
        setAttributeInternal(DATAEXTRACTIONPROC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute dataExtrationRecType.
     * @return the dataExtrationRecType
     */
    public String getdataExtrationRecType() {
        return (String) getAttributeInternal(DATAEXTRATIONRECTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute dataExtrationRecType.
     * @param value value to set the  dataExtrationRecType
     */
    public void setdataExtrationRecType(String value) {
        setAttributeInternal(DATAEXTRATIONRECTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute dataExtrationTableType.
     * @return the dataExtrationTableType
     */
    public String getdataExtrationTableType() {
        return (String) getAttributeInternal(DATAEXTRATIONTABLETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute dataExtrationTableType.
     * @param value value to set the  dataExtrationTableType
     */
    public void setdataExtrationTableType(String value) {
        setAttributeInternal(DATAEXTRATIONTABLETYPE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InterfaceROVO1.
     */
    public RowSet getInterfaceROVO1() {
        return (RowSet) getAttributeInternal(INTERFACEROVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ActionsROVO1.
     */
    public RowSet getActionsROVO1() {
        return (RowSet) getAttributeInternal(ACTIONSROVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InterfaceROVOChild.
     */
    public RowSet getInterfaceROVOChild() {
        return (RowSet) getAttributeInternal(INTERFACEROVOCHILD);
    }

    /**
     * Gets the view accessor <code>RowSet</code> xxdmInterfaceVOUploaded.
     */
    public RowSet getxxdmInterfaceVOUploaded() {
        return (RowSet) getAttributeInternal(XXDMINTERFACEVOUPLOADED);
    }

    /**
     * Gets the view accessor <code>RowSet</code> xxdmInterfaceVOValidated.
     */
    public RowSet getxxdmInterfaceVOValidated() {
        return (RowSet) getAttributeInternal(XXDMINTERFACEVOVALIDATED);
    }

    /**
     * Gets the view accessor <code>RowSet</code> xxdmInterfaceVOAll.
     */
    public RowSet getxxdmInterfaceVOAll() {
        return (RowSet) getAttributeInternal(XXDMINTERFACEVOALL);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ExportInterfaceROVO1.
     */
    public RowSet getExportInterfaceROVO1() {
        return (RowSet) getAttributeInternal(EXPORTINTERFACEROVO1);
    }
}

